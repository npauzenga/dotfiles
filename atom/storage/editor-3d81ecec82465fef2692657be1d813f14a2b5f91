{"mode":"editor","version":1,"windowDimensions":{"x":-8,"y":23,"width":1341,"height":873,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/nate/.rvm/gems/ruby-2.2.3/gems/faker-1.5.0"],"buffers":[{"text":"module Faker\n  class Hipster < Base\n    class << self\n      def word\n        translate('faker.hipster.words').sample\n      end\n\n      def words(num = 3, supplemental = false)\n        resolved_num = resolve(num)\n        word_list = (\n          translate('faker.hipster.words') +\n          (supplemental ? translate('faker.lorem.words') : [])\n        )\n        word_list = word_list * ((resolved_num / word_list.length) + 1)\n        word_list.shuffle[0, resolved_num]\n      end\n\n      def character\n        characters(1)\n      end\n\n      def characters(char_count = 255)\n        return '' if char_count.respond_to?(:to_i) && char_count.to_i < 1\n        char_count = resolve(char_count)\n        rand(36**char_count).to_s(36).rjust(char_count, '0').chars.to_a.shuffle.join\n      end\n\n      def sentence(word_count = 4, supplemental = false, random_words_to_add = 6)\n        words(word_count + rand(random_words_to_add.to_i).to_i, supplemental).join(' ').capitalize + '.'\n      end\n\n      def sentences(sentence_count = 3, supplemental = false)\n        [].tap do |sentences|\n          1.upto(resolve(sentence_count)) do\n            sentences << sentence(3, supplemental)\n          end\n        end\n      end\n\n      def paragraph(sentence_count = 3, supplemental = false, random_sentences_to_add = 3)\n        sentences(resolve(sentence_count) + rand(random_sentences_to_add.to_i).to_i, supplemental).join(' ')\n      end\n\n      def paragraphs(paragraph_count = 3, supplemental = false)\n        [].tap do |paragraphs|\n          1.upto(resolve(paragraph_count)) do\n            paragraphs << paragraph(3, supplemental)\n          end\n        end\n      end\n\n    private\n\n      # If an array or range is passed, a random value will be selected.\n      # All other values are simply returned.\n      def resolve(value)\n        case value\n        when Array then value[rand(value.size)]\n        when Range then rand((value.last+1) - value.first) + value.first\n        else value\n        end\n      end\n    end\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":188},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/nate/.Trash/hipster.rb","digestWhenLastPersisted":"91c5b7ed786e3afa8eabf9a7ae7b5996a49ea86a","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":188,"softTabs":true,"displayBuffer":{"id":189,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/nate/.Trash/hipster.rb","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/nate/.Trash/hipster.rb","focused":false,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"findOptions":{"findPattern":"\"","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["Wes","Wes Anderson","buzzwords","bs","\""],"replaceHistory":[],"pathsHistory":[]},"fuzzy-finder":{"/Users/nate/.Trash/hipster.rb":1445695257684},"keybinding-resolver":{},"metrics":{"sessionLength":43524751},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/nate/.rvm/gems/ruby-2.2.3/gems/faker-1.5.0":{"isExpanded":true,"entries":{"lib":{"isExpanded":true,"entries":{"extensions":{"isExpanded":false,"entries":{}},"faker":{"isExpanded":false,"entries":{}},"helpers":{"isExpanded":true,"entries":{}},"locales":{"isExpanded":false,"entries":{}}}},"test":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/nate/.rvm/gems/ruby-2.2.3/gems/faker-1.5.0/lib/faker","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}}}