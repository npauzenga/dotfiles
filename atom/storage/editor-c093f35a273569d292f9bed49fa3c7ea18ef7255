{"version":1,"windowDimensions":{"x":2,"y":23,"width":1437,"height":873,"maximized":true},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers"],"buffers":[{"text":"class UsersController < AuthenticationController\n  skip_before_action :authenticate, only: :create\n  # valid user creation curl --\n  #\n  # curl -X POST -F user[first_name]=Nate \\\n  # -F user[state]=MD -F user[country]=USA \\\n  # -F user[city]=Annapolis -F user[email]=test@test.com \\\n  # -F user[last_name]=Bates  -F user[password]=Helloworld \\\n  # http://localhost:3000/users.json -H \"Accept: application/json\"\n\n  # curl -i -H \"Content-Type: application/json\" \\\n  # -d '{\"user\": {\"email\": \"test@test.com\"}}'\n\n  # POST /users\n  def create\n    result = CreateUser.call(user_params: user_params)\n    if result.success?\n      token = CreateAuthToken.call(user: result.user).token\n      render json: { jwt: token }, status: :created\n    else\n      render json: result.errors, status: :unprocessable_entity\n    end\n  end\n\n  # GET /users/1\n  def show\n    result = ShowUser.call(id: params[:id])\n    if result.success?\n      render json: result.user, status: :ok\n    else\n      render json: result.errors, status: :not_found\n    end\n  end\n\n  # PATCH /users/1\n  def update\n    result = UpdateUser.call(user: current_user, params: user_params)\n    if result.success?\n      render json: result.user, status: :ok\n    else\n      render json: result.errors, status: :unprocessable_entity\n    end\n  end\n\n  # DELETE /users/1\n  def destroy\n    result = DeleteUser.call(id: current_user.id)\n    if result.success?\n      render json: result.message, status: :ok\n    else\n      render json: result.errors, status: :not_found\n    end\n  end\n\n  private\n\n  def user_params\n    params.require(:user).permit(:first_name,\n                                 :email,\n                                 :last_name,\n                                 :city,\n                                 :state,\n                                 :country,\n                                 :password)\n  end\nend\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":18,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers/users_controller.rb~","digestWhenLastPersisted":"fbcb82e9ed6c40c564faa233c643a5cc74241762","preferredLineEnding":null,"deserializer":"TextBuffer","version":4},{"text":"class UsersController < AuthenticationController\n  skip_before_action :authenticate, only: :create\n  # valid user creation curl --\n  #\n  # curl -X POST -F user[first_name]=Nate \\\n  # -F user[state]=MD -F user[country]=USA \\\n  # -F user[city]=Annapolis -F user[email]=test@test.com \\\n  # -F user[last_name]=Bates  -F user[password]=Helloworld \\\n  # http://localhost:3000/users.json -H \"Accept: application/json\"\n\n  # curl -i -H \"Content-Type: application/json\" \\\n  # -d '{\"user\": {\"email\": \"test@test.com\"}}'\n\n  # POST /users\n  def create\n    result = CreateUser.call(user_params: user_params)\n    if result.success?\n      token = CreateAuthToken.call(user: result.user).token\n      render json: { jwt: token }, status: :created\n    else\n      render json: result.errors, status: :unprocessable_entity\n    end\n  end\n\n  # GET /users/1\n  def show\n    result = ShowUser.call(id: params[:id])\n    if result.success?\n      render json: result.user, status: :ok\n    else\n      render json: result.errors, status: :not_found\n    end\n  end\n\n  # PATCH /users/1\n  def update\n    result = UpdateUser.call(user: current_user, params: user_params)\n    if result.success?\n      render json: result.user, status: :ok\n    else\n      render json: result.errors, status: :unprocessable_entity\n    end\n  end\n\n  # DELETE /users/1\n  def destroy\n    result = DeleteUser.call(id: current_user.id)\n    if result.success?\n      render json: result.message, status: :ok\n    else\n      render json: result.errors, status: :not_found\n    end\n  end\n\n  private\n\n  def user_params\n    params.require(:user).permit(:first_name,\n                                 :email,\n                                 :last_name,\n                                 :city,\n                                 :state,\n                                 :country,\n                                 :password)\n  end\nend\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"nextMarkerId":0,"id":"0","maintainHistory":false,"markersById":{},"version":2},"1":{"nextMarkerId":0,"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"nextMarkerId":1,"id":"2","maintainHistory":true,"markersById":{"2-0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2}},"nextMarkerLayerId":3,"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers/users_controller.rb","digestWhenLastPersisted":"fbcb82e9ed6c40c564faa233c643a5cc74241762","preferredLineEnding":null,"deserializer":"TextBuffer","version":4}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":4,"softTabs":true,"firstVisibleScreenRow":30,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":5,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers/users_controller.rb~","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"},{"deserializer":"TextEditor","id":8,"softTabs":true,"firstVisibleScreenRow":30,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":9,"softWrapped":false,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers/users_controller.rb","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"activeItemURI":"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers/users_controller.rb~","focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-ruby","language-hyperlink","language-todo"],"destroyedItemURIs":[]},"packageStates":{"fuzzy-finder":{"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers/users_controller.rb~":1450733489099,"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers/users_controller.rb":1450733488686},"metrics":{"sessionLength":21974},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers":{"isExpanded":true,"entries":{"concerns":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/nate/Documents/Bloc/code/MeetMeeples/meet_meeples-server/app/controllers/users_controller.rb~","hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200}},"fullScreen":false}