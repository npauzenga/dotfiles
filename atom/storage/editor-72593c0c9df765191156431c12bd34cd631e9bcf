{"mode":"editor","version":1,"windowDimensions":{"x":4,"y":23,"width":895,"height":797,"maximized":false},"grammars":{"deserializer":"GrammarRegistry","grammarOverridesByPath":{}},"project":{"paths":["/Users/nate/Documents/Bloc/code/address-bloc"],"buffers":[{"text":"require_relative \"entry.rb\"\nrequire \"csv\"\n\nclass AddressBook\n  attr_accessor :entries\n\n  def initialize\n    @entries = []\n  end\n\n  def add_entry(name, phone, email)\n    index = 0\n\n    @entries.each do |entry|\n      break if name < entry.name\n      index += 1\n    end\n    @entries.insert(index, Entry.new(name, phone, email))\n  end\n\n  def remove_entry(name, phone, email)\n    @entries.each do |entry|\n      if name == entry.name && phone == entry.phone_number && email == entry.email\n        @entries.delete(entry)\n        break\n      end\n    end\n  end\n\n  def import_from_csv(file_name)\n    csv_text = File.read(file_name)\n    csv = CSV.parse(csv_text, headers: true, skip_blanks: true)\n\n    csv.each do |row|\n      row_hash = row.to_hash\n      add_entry(row_hash[\"name\"], row_hash[\"phone_number\"], row_hash[\"email\"])\n    end\n  end\n\n  def binary_search(name)\n    lower = 0\n    upper = entries.length - 1\n\n    while lower <= upper\n      mid = (lower + upper) / 2\n      mid_name = entries[mid].name\n\n      if name == mid_name\n        return entries[mid]\n      elsif name < mid_name\n        upper = mid - 1\n      elsif name > mid_name\n        lower = mid + 1\n      end\n    end\n    nil\n  end\nend\n","markerStore":{"nextMarkerId":285,"markersById":{"0":{"range":{"start":{"row":30,"column":18},"end":{"row":30,"column":18}},"properties":{"type":"selection","editorId":50,"goalScreenRange":null,"autoscroll":false,"preserveFolds":true},"reversed":true,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"15":{"range":{"start":{"row":58,"column":0},"end":{"row":58,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":false},"26":{"range":{"start":{"row":58,"column":0},"end":{"row":58,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":false},"55":{"range":{"start":{"row":58,"column":0},"end":{"row":58,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":false},"135":{"range":{"start":{"row":58,"column":0},"end":{"row":58,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":343,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/nate/Documents/Bloc/code/address-bloc/models/address_book.rb","digestWhenLastPersisted":"f99814f7449178e527f8fe58fdc50676a7d0ed0c","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"require_relative \"../models/address_book.rb\"\n\nRSpec.describe AddressBook do\n  let(:book) { AddressBook.new }\n\n  def check_entry(entry, expected_name, expected_number, expected_email)\n    expect(entry.name).to eql expected_name\n    expect(entry.phone_number).to eql expected_number\n    expect(entry.email).to eql expected_email\n  end\n\n  context \"attributes\" do\n    it \"should respond to entries\" do\n      expect(book).to respond_to(:entries)\n    end\n\n    it \"should initialize entries as an array\" do\n      expect(book.entries).to be_a(Array)\n    end\n\n    it \"should initialize entries as empty\" do\n      expect(book.entries.size).to eq 0\n    end\n  end\n\n  context \"#add_entry\" do\n    it \"adds only one entry to the address book\" do\n      book.add_entry(\"Ada Lovelace\",\n                     \"010.012.1815\",\n                     \"augusta.king@lovelace.com\")\n\n      expect(book.entries.size).to eq 1\n    end\n\n    it \"adds the correct information to entries\" do\n      book.add_entry(\"Ada Lovelace\",\n                     \"010.012.1815\",\n                     \"augusta.king@lovelace.com\")\n      new_entry = book.entries[0]\n\n      expect(new_entry.name).to eq \"Ada Lovelace\"\n      expect(new_entry.phone_number).to eq \"010.012.1815\"\n      expect(new_entry.email).to eq \"augusta.king@lovelace.com\"\n    end\n  end\n\n  context \"#remove_entry\" do\n    it \"removes a single entry from the address book\" do\n      book = AddressBook.new\n\n      book.add_entry(\"Nate Pauzenga\",\n                     \"555-555-5555\",\n                     \"nate@fictional.com\")\n      book.add_entry(\"Ada Lovelace\",\n                     \"010.012.1815\",\n                     \"augusta.king@lovelace.com\")\n\n      expect(book.entries.size).to eq 2\n      book.remove_entry(\"Ada Lovelace\",\n                        \"010.012.1815\",\n                        \"augusta.king@lovelace.com\")\n      expect(book.entries.size).to eq 1\n      expect(book.entries.first.name).to eq(\"Nate Pauzenga\")\n    end\n  end\n\n  context \"#import_from_csv\" do\n    it \"imports the correct number of entries\" do\n      book.import_from_csv(\"entries.csv\")\n      book_size = book.entries.size\n\n      expect(book_size).to eql 5\n    end\n\n    it \"imports the 1st entry\" do\n      book.import_from_csv(\"entries.csv\")\n      entry_one = book.entries[0]\n      check_entry(entry_one, \"Bill\", \"555-555-4854\", \"bill@blocmail.com\")\n    end\n\n    it \"imports the 2nd entry\" do\n      book.import_from_csv(\"entries.csv\")\n      # Check the second entry\n      entry_two = book.entries[1]\n      check_entry(entry_two, \"Bob\", \"555-555-5415\", \"bob@blocmail.com\")\n    end\n\n    it \"imports the 3rd entry\" do\n      book.import_from_csv(\"entries.csv\")\n      # Check the third entry\n      entry_three = book.entries[2]\n      check_entry(entry_three, \"Joe\", \"555-555-3660\", \"joe@blocmail.com\")\n    end\n\n    it \"imports the 4th entry\" do\n      book.import_from_csv(\"entries.csv\")\n      # Check the fourth entry\n      entry_four = book.entries[3]\n      check_entry(entry_four, \"Sally\", \"555-555-4646\", \"sally@blocmail.com\")\n    end\n\n    it \"imports the 5th entry\" do\n      book.import_from_csv(\"entries.csv\")\n      # Check the fifth entry\n      entry_five = book.entries[4]\n      check_entry(entry_five, \"Sussie\", \"555-555-2036\", \"sussie@blocmail.com\")\n    end\n  end\n\n  context \"Import from entries_2.csv\" do\n    it \"imports the correct number of entries from entries_2.csv\" do\n      book.import_from_csv(\"entries_2.csv\")\n      book_size = book.entries.size\n\n      expect(book_size).to eql 3\n    end\n\n    it \"imports the 1st entry from csv #2\" do\n      book.import_from_csv(\"entries_2.csv\")\n      entry_one = book.entries[0]\n      check_entry(entry_one, \"Gary\", \"000-000-0000\", \"gdawg@busey2016.com\")\n    end\n\n    it \"imports the 2nd entry from csv #2\" do\n      book.import_from_csv(\"entries_2.csv\")\n      entry_two = book.entries[1]\n      check_entry(entry_two, \"Nate\",\n                             \"555-1-ALLTHENUMBERS\",\n                             \"nate@fictional.email\")\n    end\n\n    it \"imports the 3rd entry from csv #2\" do\n      book.import_from_csv(\"entries_2.csv\")\n      entry_three = book.entries[2]\n      check_entry(entry_three, \"Walter\",\n                               \"555-666-7777\",\n                               \"wwhite@legitimatebusiness.com\")\n    end\n  end\n\n  context \"#binary_search\" do\n    it \"searches AddressBook for a non-existent entry\" do\n      book.import_from_csv(\"entries.csv\")\n      entry = book.binary_search(\"Dan\")\n      expect(entry).to be_nil\n    end\n\n    it \"searches AddressBook for Bill\" do\n      book.import_from_csv(\"entries.csv\")\n      entry = book.binary_search(\"Bill\")\n      expect(entry).to be_a Entry\n      check_entry(entry, \"Bill\", \"555-555-4854\", \"bill@blocmail.com\")\n    end\n\n    it \"searches AddressBook for Bob\" do\n      book.import_from_csv(\"entries.csv\")\n      entry = book.binary_search(\"Bob\")\n      expect(entry).to be_a Entry\n      check_entry(entry, \"Bob\", \"555-555-5415\", \"bob@blocmail.com\")\n    end\n\n    it \"searches AddressBook for Joe\" do\n      book.import_from_csv(\"entries.csv\")\n      entry = book.binary_search(\"Joe\")\n      expect(entry).to be_a Entry\n      check_entry(entry, \"Joe\", \"555-555-3660\", \"joe@blocmail.com\")\n    end\n\n    it \"searches AddressBook for Sally\" do\n      book.import_from_csv(\"entries.csv\")\n      entry = book.binary_search(\"Sally\")\n      expect(entry).to be_a Entry\n      check_entry(entry, \"Sally\", \"555-555-4646\", \"sally@blocmail.com\")\n    end\n\n    it \"searches AddressBook for Sussie\" do\n      book.import_from_csv(\"entries.csv\")\n      entry = book.binary_search(\"Sussie\")\n      expect(entry).to be_a Entry\n      check_entry(entry, \"Sussie\", \"555-555-2036\", \"sussie@blocmail.com\")\n    end\n\n    it \"searches AddressBook for Billy\" do\n      book.import_from_csv(\"entries.csv\")\n      entry = book.binary_search(\"Billy\")\n      expect(entry).to be_nil\n    end\n  end\nend\n","markerStore":{"nextMarkerId":1277,"markersById":{"0":{"range":{"start":{"row":189,"column":0},"end":{"row":189,"column":0}},"properties":{"type":"selection","editorId":54,"goalScreenRange":null,"preserveFolds":true,"autoscroll":false,"clip":"forward"},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"1249":{"range":{"start":{"row":189,"column":0},"end":{"row":189,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":false},"1250":{"range":{"start":{"row":189,"column":0},"end":{"row":189,"column":0}},"properties":{},"reversed":false,"tailed":true,"valid":false,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":163,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/nate/Documents/Bloc/code/address-bloc/spec/address_book_spec.rb","digestWhenLastPersisted":"d98264cbce8de6dd0e23a21a8368d1cedcfddd19","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"require_relative \"../models/address_book\"\n\nclass MenuController\n  attr_accessor :address_book\n\n  def initialize\n    @address_book = AddressBook.new\n  end\n\n  def main_menu\n    puts \"Main Menu - #{@address_book.entries.count} entries\"\n    puts \"0 - View Entry Number n\"\n    puts \"1 - View all entries\"\n    puts \"2 - Create an entry\"\n    puts \"3 - Search for an entry\"\n    puts \"4 - Import entries from a CSV\"\n    puts \"5 - Exit\"\n    print \"Enter your selection: \"\n\n    selection = gets.to_i\n\n    case selection\n    when 0\n      system \"clear\"\n      view_entry\n      main_menu\n    when 1\n      system \"clear\"\n      view_all_entries\n      main_menu\n    when 2\n      system \"clear\"\n      create_entry\n      main_menu\n    when 3\n      system \"clear\"\n      search_entries\n      main_menu\n    when 4\n      system \"clear\"\n      read_csv\n      main_menu\n    when 5\n      puts \"Good-bye!\"\n      exit(0)\n\n    else\n      system \"clear\"\n      puts \"Sorry, that is not a valid input\"\n      main_menu\n    end\n  end\n\n  def view_all_entries\n    @address_book.entries.each do |entry|\n      system \"clear\"\n      puts entry.to_s\n\n      entry_submenu(entry)\n    end\n\n    system \"clear\"\n    puts \"End of entries\"\n  end\n\n  def create_entry\n    system \"clear\"\n    puts \"New AddressBloc Entry\"\n\n    print \"Name: \"\n    name = gets.chomp\n    print \"Phone Number: \"\n    phone = gets.chomp\n    print \"Email: \"\n    email = gets.chomp\n\n    @address_book.add_entry(name, phone, email)\n\n    system \"clear\"\n    puts \"New entry created\"\n  end\n\n  def search_entries\n    print \"Search by name: \"\n    name = gets.chomp\n\n    match = @address_book.binary_search(name)\n    system \"clear\"\n\n    if match\n      puts match.to_s\n      search_submenu(match)\n    else\n      puts \"No match found for #{name}\"\n    end\n  end\n\n  def search_submenu(entry)\n    puts \"\\nd - delete entry\"\n    puts \"e - edit this entry\"\n    puts \"m - return to main menu\"\n\n    selection = gets.chomp\n\n    case selection\n    when \"d\"\n      system \"clear\"\n      delete_entry(entry)\n      main_menu\n    when \"e\"\n      edit_entry(entry)\n      system \"clear\"\n      main_menu\n    when \"m\"\n      system \"clear\"\n      main_menu\n    else\n      system \"clear\"\n      puts \"#{selection} is not a valid input\"\n      puts entry.to_s\n      search_submenu(entry)\n    end\n  end\n\n  def read_csv\n    print \"Enter CSV file to import: \"\n    file_name = gets.chomp\n\n    if file_name.empty?\n      system \"clear\"\n      puts \"No CSV file read\"\n      main_menu\n    end\n\n    begin\n      entry_count = @address_book.import_from_csv(file_name).count\n      system \"clear\"\n      puts \"#{entry_count} new entries added from #{file_name}\"\n    rescue\n      puts \"#{file_name} is not a valid CSV file, please enter a valid name\"\n      read_csv\n    end\n  end\n\n  def entry_submenu(entry)\n    puts \"n - next entry\"\n    puts \"d - delete entry\"\n    puts \"e - edit this entry\"\n    puts \"m - return to main menu\"\n\n    selection = gets.chomp\n\n    case selection\n    when \"n\"\n    when \"d\"\n      delete_entry(entry)\n    when \"e\"\n      edit_entry(entry)\n      entry_submenu(entry)\n    when \"m\"\n      system \"clear\"\n      main_menu\n    else\n      system \"clear\"\n      puts \"#{selection} is not a valid input\"\n      entries_submenu(entry)\n    end\n  end\n\n  def view_entry\n    number = nil\n\n    while number.nil? || number >= @address_book.entries.count\n      print \"Enter a valid entry number: \"\n      number = gets.chomp.to_i\n    end\n\n    system \"clear\"\n    puts @address_book.entries[number], \"\\n\"\n    puts \"Press enter to return to main menu\"\n    gets.chomp\n    system \"clear\"\n  end\n\n  def delete_entry(entry)\n    @address_book.entries.delete(entry)\n    puts \"#{entry.name} has been deleted\"\n  end\n\n  def edit_entry(entry)\n    print \"Updated name: \"\n    name = gets.chomp\n    print \"Updated phone number: \"\n    phone_number = gets.chomp\n    print \"Updated email: \"\n    email = gets.chomp\n\n    entry.name = name unless name.empty?\n    entry.phone_number = phone_number unless phone_number.empty?\n    entry.email = email unless email.empty?\n\n    puts \"Updated entry:\"\n    puts entry\n  end\nend\n","markerStore":{"nextMarkerId":62,"markersById":{"0":{"range":{"start":{"row":189,"column":23},"end":{"row":189,"column":23}},"properties":{"type":"selection","editorId":58,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true},"8":{"range":{"start":{"row":184,"column":24},"end":{"row":184,"column":25}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"9":{"range":{"start":{"row":184,"column":18},"end":{"row":184,"column":19}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"28":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"29":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"30":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"31":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"32":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"33":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"34":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"35":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"36":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"37":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"38":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"39":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"40":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"41":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"56":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"57":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"58":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"59":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"60":{"range":{"start":{"row":189,"column":22},"end":{"row":189,"column":23}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false},"61":{"range":{"start":{"row":189,"column":16},"end":{"row":189,"column":17}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"overlap","maintainHistory":false}},"version":2},"history":{"version":3,"nextCheckpointId":34,"undoStack":[{"type":"group-start","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":58},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[18,0]],"oldText":"","newText":"    puts \"5 - ??? (completely safe)\"\n    puts \"6 - Exit\"\n"}},{"type":"change","content":{"oldRange":[[18,0],[19,0]],"newRange":[[18,0],[18,0]],"oldText":"    puts \"5 - Exit\"\n","newText":""}},{"type":"change","content":{"oldRange":[[24,0],[24,0]],"newRange":[[24,0],[27,0]],"oldText":"","newText":"      system \"clear\"\n      view_entry\n      main_menu\n"}},{"type":"change","content":{"oldRange":[[27,0],[30,0]],"newRange":[[27,0],[27,0]],"oldText":"        system \"clear\"\n        view_entry\n        main_menu\n","newText":""}},{"type":"change","content":{"oldRange":[[44,0],[44,0]],"newRange":[[44,0],[48,0]],"oldText":"","newText":"      system \"clear\"\n      @address_book.delete_all_entries\n      main_menu\n    when 6\n"}},{"type":"change","content":{"oldRange":[[88,0],[88,0]],"newRange":[[88,0],[100,0]],"oldText":"","newText":"    print \"Search by name: \"\n    name = gets.chomp\n\n    match = @address_book.binary_search(name)\n    system \"clear\"\n\n    if match\n      puts match.to_s\n      search_submenu(match)\n    else\n      puts \"No match found for #{name}\"\n    end\n"}},{"type":"change","content":{"oldRange":[[102,0],[102,0]],"newRange":[[102,0],[129,0]],"oldText":"","newText":"  def search_submenu(entry)\n    puts \"\\nd - delete entry\"\n    puts \"e - edit this entry\"\n    puts \"m - return to main menu\"\n\n    selection = gets.chomp\n\n    case selection\n    when \"d\"\n      system \"clear\"\n      delete_entry(entry)\n      main_menu\n    when \"e\"\n      edit_entry(entry)\n      system \"clear\"\n      main_menu\n    when \"m\"\n      system \"clear\"\n      main_menu\n    else\n      system \"clear\"\n      puts \"#{selection} is not a valid input\"\n      puts entry.to_s\n      search_submenu(entry)\n    end\n  end\n\n"}},{"type":"change","content":{"oldRange":[[130,0],[130,0]],"newRange":[[130,0],[147,0]],"oldText":"","newText":"    print \"Enter CSV file to import: \"\n    file_name = gets.chomp\n\n    if file_name.empty?\n      system \"clear\"\n      puts \"No CSV file read\"\n      main_menu\n    end\n\n    begin\n      entry_count = @address_book.import_from_csv(file_name).count\n      system \"clear\"\n      puts \"#{entry_count} new entries added from #{file_name}\"\n    rescue\n      puts \"#{file_name} is not a valid CSV file, please enter a valid name\"\n      read_csv\n    end\n"}},{"type":"change","content":{"oldRange":[[160,0],[160,0]],"newRange":[[160,0],[161,0]],"oldText":"","newText":"      delete_entry(entry)\n"}},{"type":"change","content":{"oldRange":[[162,0],[162,0]],"newRange":[[162,0],[164,0]],"oldText":"","newText":"      edit_entry(entry)\n      entry_submenu(entry)\n"}},{"type":"change","content":{"oldRange":[[177,0],[177,0]],"newRange":[[177,0],[178,0]],"oldText":"","newText":"    while number.nil? || number >= @address_book.entries.count\n"}},{"type":"change","content":{"oldRange":[[178,0],[179,0]],"newRange":[[178,0],[178,0]],"oldText":"    while number == nil || number >= @address_book.entries.count\n","newText":""}},{"type":"change","content":{"oldRange":[[188,0],[188,0]],"newRange":[[188,0],[214,0]],"oldText":"","newText":"\n  def delete_entry(entry)\n    @address_book.entries.delete(entry)\n    puts \"#{entry.name} has been deleted\"\n  end\n\n  def edit_entry(entry)\n    system \"clear\"\n    print \"Updated name: \"\n    name = gets.chomp\n    print \"Updated phone number: \"\n    phone_number = gets.chomp\n    print \"Updated email: \"\n    email = gets.chomp\n\n    entry.name = name unless name.empty?\n    entry.phone_number = phone_number unless phone_number.empty?\n    entry.email = email unless email.empty?\n\n    system \"clear\"\n    puts \"Updated entry:\"\n    puts entry\n    puts \"Press enter to return to main menu\"\n    gets.chomp\n    system \"clear\"\n  end\n"}},{"type":"group-end","snapshot":{"0":{"range":[[0,0],[0,0]],"properties":{"type":"selection","editorId":58},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[192,5],[192,5]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[192,5],[192,5]],"newRange":[[192,5],[193,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[193,0],[193,0]],"newRange":[[193,0],[193,2]],"oldText":"","newText":"  "}},{"type":"group-end","snapshot":{"0":{"range":[[193,2],[193,2]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[193,2],[193,2]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[193,2],[193,2]],"newRange":[[193,2],[194,0]],"oldText":"","newText":"\n"}},{"type":"change","content":{"oldRange":[[194,0],[194,0]],"newRange":[[194,0],[194,2]],"oldText":"","newText":"  "}},{"type":"change","content":{"oldRange":[[193,0],[193,2]],"newRange":[[193,0],[193,0]],"oldText":"  ","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[194,2],[194,2]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[194,2],[194,2]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[194,2],[194,2]],"newRange":[[194,2],[201,5]],"oldText":"","newText":"def delete_all_entries\n    p \"Ha! It's totally not safe!!\"\n    @entries.clear\n    p \"All entries deleted!\"\n    puts \"Press enter to return to main menu\"\n    gets.chomp\n    system \"clear\"\n  end"}},{"type":"change","content":{"oldRange":[[194,0],[194,2]],"newRange":[[194,0],[194,2]],"oldText":"  ","newText":"  "}},{"type":"group-end","snapshot":{"0":{"range":[[201,5],[201,5]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[196,5],[196,18]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":true,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[196,5],[196,18]],"newRange":[[196,5],[196,6]],"oldText":"entries.clear","newText":"a"}},{"type":"change","content":{"oldRange":[[196,6],[196,6]],"newRange":[[196,6],[196,7]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[196,7],[196,7]],"newRange":[[196,7],[196,8]],"oldText":"","newText":"d"}},{"type":"change","content":{"oldRange":[[196,8],[196,8]],"newRange":[[196,8],[196,9]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[196,9],[196,9]],"newRange":[[196,9],[196,10]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[196,10],[196,10]],"newRange":[[196,10],[196,11]],"oldText":"","newText":"s"}},{"type":"change","content":{"oldRange":[[196,11],[196,11]],"newRange":[[196,11],[196,12]],"oldText":"","newText":"s"}},{"type":"group-end","snapshot":{"0":{"range":[[196,12],[196,12]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[196,12],[196,12]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[196,12],[196,12]],"newRange":[[196,12],[196,13]],"oldText":"","newText":"_"}},{"type":"change","content":{"oldRange":[[196,13],[196,13]],"newRange":[[196,13],[196,14]],"oldText":"","newText":"b"}},{"type":"change","content":{"oldRange":[[196,14],[196,14]],"newRange":[[196,14],[196,15]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[196,15],[196,15]],"newRange":[[196,15],[196,16]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[196,16],[196,16]],"newRange":[[196,16],[196,17]],"oldText":"","newText":"k"}},{"type":"change","content":{"oldRange":[[196,17],[196,17]],"newRange":[[196,17],[196,18]],"oldText":"","newText":"."}},{"type":"change","content":{"oldRange":[[196,18],[196,18]],"newRange":[[196,18],[196,19]],"oldText":"","newText":"r"}},{"type":"change","content":{"oldRange":[[196,19],[196,19]],"newRange":[[196,19],[196,20]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[196,20],[196,20]],"newRange":[[196,20],[196,21]],"oldText":"","newText":"m"}},{"type":"change","content":{"oldRange":[[196,21],[196,21]],"newRange":[[196,21],[196,22]],"oldText":"","newText":"o"}},{"type":"change","content":{"oldRange":[[196,22],[196,22]],"newRange":[[196,22],[196,23]],"oldText":"","newText":"v"}},{"type":"change","content":{"oldRange":[[196,23],[196,23]],"newRange":[[196,23],[196,24]],"oldText":"","newText":"e"}},{"type":"change","content":{"oldRange":[[196,24],[196,24]],"newRange":[[196,24],[196,25]],"oldText":"","newText":"_"}},{"type":"change","content":{"oldRange":[[196,25],[196,25]],"newRange":[[196,25],[196,26]],"oldText":"","newText":"a"}},{"type":"change","content":{"oldRange":[[196,26],[196,26]],"newRange":[[196,26],[196,27]],"oldText":"","newText":"l"}},{"type":"change","content":{"oldRange":[[196,27],[196,27]],"newRange":[[196,27],[196,28]],"oldText":"","newText":"l"}},{"type":"group-end","snapshot":{"0":{"range":[[196,28],[196,28]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"group-start","snapshot":{"0":{"range":[[189,25],[189,25]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}},{"type":"change","content":{"oldRange":[[16,0],[16,0]],"newRange":[[16,0],[17,0]],"oldText":"","newText":"    puts \"5 - Exit\"\n"}},{"type":"change","content":{"oldRange":[[17,0],[19,0]],"newRange":[[17,0],[17,0]],"oldText":"    puts \"5 - ??? (completely safe)\"\n    puts \"6 - Exit\"\n","newText":""}},{"type":"change","content":{"oldRange":[[43,0],[47,0]],"newRange":[[43,0],[43,0]],"oldText":"      system \"clear\"\n      @address_book.delete_all_entries\n      main_menu\n    when 6\n","newText":""}},{"type":"change","content":{"oldRange":[[189,0],[198,0]],"newRange":[[189,0],[189,0]],"oldText":"  def delete_all_entries\n    p \"Ha! It's totally not safe!!\"\n    @address_book.remove_all\n    p \"All entries deleted!\"\n    puts \"Press enter to return to main menu\"\n    gets.chomp\n    system \"clear\"\n  end\n\n","newText":""}},{"type":"change","content":{"oldRange":[[190,0],[191,0]],"newRange":[[190,0],[190,0]],"oldText":"    system \"clear\"\n","newText":""}},{"type":"change","content":{"oldRange":[[201,0],[202,0]],"newRange":[[201,0],[201,0]],"oldText":"    system \"clear\"\n","newText":""}},{"type":"change","content":{"oldRange":[[203,0],[206,0]],"newRange":[[203,0],[203,0]],"oldText":"    puts \"Press enter to return to main menu\"\n    gets.chomp\n    system \"clear\"\n","newText":""}},{"type":"group-end","snapshot":{"0":{"range":[[184,25],[184,25]],"properties":{"type":"selection","editorId":58,"goalScreenRange":null,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}}}],"redoStack":[]},"encoding":"utf8","filePath":"/Users/nate/Documents/Bloc/code/address-bloc/controllers/menu_controller.rb","digestWhenLastPersisted":"d32f74abfb595352ac16540a4879c004a6e877a1","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"Style/StringLiterals:\n  EnforcedStyle: double_quotes\n  Enabled: true\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":70,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/nate/Documents/Bloc/code/address-bloc/.rubocop.yml","digestWhenLastPersisted":"6c62938bb03c94be78e074911ce4c8ed8474ee6a","preferredLineEnding":null,"deserializer":"TextBuffer","version":2},{"text":"require_relative \"../models/entry.rb\"\n\nRSpec.describe Entry do\n  context \"attributes\" do\n    it \"should respond to name\" do\n      entry = Entry.new(\"Ada Lovelace\", \"010.012.1815\", \"augusta.king@lovelace.com\")\n      expect(entry).to respond_to(:name)\n    end\n\n    it \"should respond to phone number\" do\n      entry = Entry.new(\"Ada Lovelace\", \"010.012.1815\", \"augusta.king@lovelace.com\")\n      expect(entry).to respond_to(:phone_number)\n    end\n\n    it \"should respond to email\" do\n      entry = Entry.new(\"Ada Lovelace\", \"010.012.1815\", \"augusta.king@lovelace.com\")\n      expect(entry).to respond_to(:email)\n    end\n  end\n\n  context \"#to_s\" do\n    it \"prints an entry as a string\" do\n      entry = Entry.new(\"Ada Lovelace\", \"010.012.1815\", \"augusta.king@lovelace.com\")\n      expected_string = \"Name: Ada Lovelace\\nPhone Number: 010.012.1815\\nEmail: augusta.king@lovelace.com\"\n      expect(entry.to_s).to eq(expected_string)\n    end\n  end\nend\n","markerStore":{"nextMarkerId":1,"markersById":{"0":{"range":{"start":{"row":0,"column":0},"end":{"row":0,"column":0}},"properties":{"type":"selection","editorId":74,"preserveFolds":true},"reversed":false,"tailed":false,"valid":true,"invalidate":"never","maintainHistory":true}},"version":2},"history":{"version":3,"nextCheckpointId":1,"undoStack":[],"redoStack":[]},"encoding":"utf8","filePath":"/Users/nate/Documents/Bloc/code/address-bloc/spec/entry_spec.rb","digestWhenLastPersisted":"759d023fad070ca5edcbc3d230726ac838bf98e2","preferredLineEnding":null,"deserializer":"TextBuffer","version":2}],"deserializer":"Project"},"workspace":{"paneContainer":{"root":{"id":3,"items":[{"id":50,"softTabs":true,"displayBuffer":{"id":51,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/nate/Documents/Bloc/code/address-bloc/models/address_book.rb","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":70,"softTabs":true,"displayBuffer":{"id":71,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/nate/Documents/Bloc/code/address-bloc/.rubocop.yml","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":74,"softTabs":true,"displayBuffer":{"id":75,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/nate/Documents/Bloc/code/address-bloc/spec/entry_spec.rb","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":58,"softTabs":true,"displayBuffer":{"id":59,"softWrapped":false,"scrollTop":0,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/nate/Documents/Bloc/code/address-bloc/controllers/menu_controller.rb","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"},{"id":54,"softTabs":true,"displayBuffer":{"id":55,"softWrapped":false,"scrollTop":3215,"scrollLeft":0,"tokenizedBuffer":{"bufferPath":"/Users/nate/Documents/Bloc/code/address-bloc/spec/address_book_spec.rb","largeFileMode":false,"deserializer":"TokenizedBuffer"},"largeFileMode":false,"deserializer":"DisplayBuffer"},"deserializer":"TextEditor"}],"activeItemURI":"/Users/nate/Documents/Bloc/code/address-bloc/spec/address_book_spec.rb","focused":false,"flexScale":1,"deserializer":"Pane"},"activePaneId":3,"deserializer":"PaneContainer","version":1},"fullScreen":false,"packagesWithActiveGrammars":["language-ruby","language-yaml","language-hyperlink","language-todo"],"deserializer":"Workspace"},"packageStates":{"find-and-replace":{"findOptions":{"findPattern":"book_length","replacePattern":"","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["lower","upper","(entries.length - 1)","HEAD","\"Dan\"","book_length"],"replaceHistory":["0","(entries.length - 1)","(book.entries.length - 1)"],"pathsHistory":["0","(entries.length - 1)","(book.entries.length - 1)"]},"fuzzy-finder":{"/Users/nate/Documents/Bloc/code/address-bloc/models/address_book.rb":1444092298410,"/Users/nate/Documents/Bloc/code/address-bloc/.rubocop.yml":1443742062662,"/Users/nate/Documents/Bloc/code/address-bloc/spec/entry_spec.rb":1443832724345,"/Users/nate/Documents/Bloc/code/address-bloc/controllers/menu_controller.rb":1443576290814,"/Users/nate/Documents/Bloc/code/address-bloc/spec/address_book_spec.rb":1444677596664},"metrics":{"sessionLength":9893},"tabs":[{}],"tree-view":{"directoryExpansionStates":{"/Users/nate/Documents/Bloc/code/address-bloc":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"controllers":{"isExpanded":false,"entries":{}},"models":{"isExpanded":false,"entries":{}},"spec":{"isExpanded":false,"entries":{}}}}},"selectedPath":"/Users/nate/Documents/Bloc/code/address-bloc/.git","hasFocus":true,"attached":true,"scrollLeft":0,"scrollTop":0,"width":200},"keybinding-resolver":{}}}